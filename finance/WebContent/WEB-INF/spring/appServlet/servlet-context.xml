<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<!-- 어노테이션 방식으로AOP설정시 -->
	<!-- @Aspect가 선언된 클래스를 모두 애스펙트로 등록 해주기 위해 작성한 부분 -->
	<aop:aspectj-autoproxy/>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	
	<context:component-scan base-package="com.test.finance, aopTest" />
	
	
	<!-- 반환형릉 modelandvew로 하고싶을때 사용한다. -->
	<beans:bean id="jsonView"
		class="net.sf.json.spring.web.servlet.view.JsonView">		
	</beans:bean>
	
	<beans:bean id="viewResolver"
		class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="0"></beans:property>
		<!-- value 우선순위를 의미한다. -->
	</beans:bean>
	
	<!-- AOP적용부터 했던 부분(XML방식으로 어드바이스 및 포인컷 등록) -->
	<!-- aop관련 라이브러리들을 추가 했다면 이 Servlet-Context.xml의 Namespaces에서
		aop를 체크하고 관련 태그들을 쓰자. -->
	<!-- <aop:config>
		<aop:aspect id="traceAspect" ref="perFormanceAOP">
			<aop:around method="aroundLog" pointcut="execution(public * com.kh.realSpringProject..*ServiceImpl.*(..))"/>
		</aop:aspect>
	</aop:config> -->
	
</beans:beans>
